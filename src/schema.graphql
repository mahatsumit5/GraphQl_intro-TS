type Query {
  "A curated array of listings to feature on the homepage"
  featuredListings: [Listing!]!

  "Returns the details about this listing"
  listing(id: ID!): Listing
}
"A particular intergalactic location available for booking"
type Listing {
  id: ID!
  "The listing's title"
  title: String!
  "The number of beds available"
  numOfBeds: Int
  ""
  description: String
  "The cost per night"
  costPerNight: Float
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  amenities: [Amenity!]!
}

type Amenity {
  id: ID!
  "the amenity category the amenity belongs to "
  category: String!
  "The amenity's name"
  name: String!
}
type Mutation {
  "Creates a new listing"
  createListing(input: CreateListingInput): CreateListingResponse
}
type CreateListingResponse {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "The newly created listing"
  listing: Listing
}
input CreateListingInput {
  "The listing's title"
  title: String!
  "The listing's description"
  description: String!
  "The number of beds available"
  numOfBeds: Int!
  "The cost per night"
  costPerNight: Float!
  "Indicates whether listing is closed for bookings (on hiatus)"
  closedForBookings: Boolean
  "The Listing's amenities"
  amenities: [ID!]!
}
